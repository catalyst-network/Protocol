<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Deltas.proto

namespace Catalyst\Protocol\Deltas;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>Catalyst.Protocol.Deltas.Delta</code>
 */
class Delta extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *  address for the content of the previous delta on the DFS
     * </pre>
     *
     * <code>bytes previous_delta_dfs_hash = 1;</code>
     */
    private $previous_delta_dfs_hash = '';
    /**
     * <code>bytes merkle_root = 2;</code>
     */
    private $merkle_root = '';
    /**
     * <pre>
     * proof of delegated authority for active wokers
     * </pre>
     *
     * <code>bytes merkle_poda = 3;</code>
     */
    private $merkle_poda = '';
    /**
     * <code>.google.protobuf.Timestamp time_stamp = 4;</code>
     */
    private $time_stamp = null;
    /**
     * <code>repeated .Catalyst.Protocol.Transaction.PublicEntry public_entries = 5;</code>
     */
    private $public_entries;
    /**
     * <code>repeated .Catalyst.Protocol.Transaction.ConfidentialEntry confidential_entries = 6;</code>
     */
    private $confidential_entries;
    /**
     * <pre>
     * one per active worker
     * </pre>
     *
     * <code>repeated .Catalyst.Protocol.Transaction.CoinbaseEntry coinbase_entries = 7;</code>
     */
    private $coinbase_entries;

    public function __construct() {
        \GPBMetadata\Deltas::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *  address for the content of the previous delta on the DFS
     * </pre>
     *
     * <code>bytes previous_delta_dfs_hash = 1;</code>
     */
    public function getPreviousDeltaDfsHash()
    {
        return $this->previous_delta_dfs_hash;
    }

    /**
     * <pre>
     *  address for the content of the previous delta on the DFS
     * </pre>
     *
     * <code>bytes previous_delta_dfs_hash = 1;</code>
     */
    public function setPreviousDeltaDfsHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->previous_delta_dfs_hash = $var;
    }

    /**
     * <code>bytes merkle_root = 2;</code>
     */
    public function getMerkleRoot()
    {
        return $this->merkle_root;
    }

    /**
     * <code>bytes merkle_root = 2;</code>
     */
    public function setMerkleRoot($var)
    {
        GPBUtil::checkString($var, False);
        $this->merkle_root = $var;
    }

    /**
     * <pre>
     * proof of delegated authority for active wokers
     * </pre>
     *
     * <code>bytes merkle_poda = 3;</code>
     */
    public function getMerklePoda()
    {
        return $this->merkle_poda;
    }

    /**
     * <pre>
     * proof of delegated authority for active wokers
     * </pre>
     *
     * <code>bytes merkle_poda = 3;</code>
     */
    public function setMerklePoda($var)
    {
        GPBUtil::checkString($var, False);
        $this->merkle_poda = $var;
    }

    /**
     * <code>.google.protobuf.Timestamp time_stamp = 4;</code>
     */
    public function getTimeStamp()
    {
        return $this->time_stamp;
    }

    /**
     * <code>.google.protobuf.Timestamp time_stamp = 4;</code>
     */
    public function setTimeStamp(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time_stamp = $var;
    }

    /**
     * <code>repeated .Catalyst.Protocol.Transaction.PublicEntry public_entries = 5;</code>
     */
    public function getPublicEntries()
    {
        return $this->public_entries;
    }

    /**
     * <code>repeated .Catalyst.Protocol.Transaction.PublicEntry public_entries = 5;</code>
     */
    public function setPublicEntries(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Catalyst\Protocol\Transaction\PublicEntry::class);
        $this->public_entries = $var;
    }

    /**
     * <code>repeated .Catalyst.Protocol.Transaction.ConfidentialEntry confidential_entries = 6;</code>
     */
    public function getConfidentialEntries()
    {
        return $this->confidential_entries;
    }

    /**
     * <code>repeated .Catalyst.Protocol.Transaction.ConfidentialEntry confidential_entries = 6;</code>
     */
    public function setConfidentialEntries(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Catalyst\Protocol\Transaction\ConfidentialEntry::class);
        $this->confidential_entries = $var;
    }

    /**
     * <pre>
     * one per active worker
     * </pre>
     *
     * <code>repeated .Catalyst.Protocol.Transaction.CoinbaseEntry coinbase_entries = 7;</code>
     */
    public function getCoinbaseEntries()
    {
        return $this->coinbase_entries;
    }

    /**
     * <pre>
     * one per active worker
     * </pre>
     *
     * <code>repeated .Catalyst.Protocol.Transaction.CoinbaseEntry coinbase_entries = 7;</code>
     */
    public function setCoinbaseEntries(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Catalyst\Protocol\Transaction\CoinbaseEntry::class);
        $this->coinbase_entries = $var;
    }

}

