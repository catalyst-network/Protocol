<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Transaction.proto

namespace Catalyst\Protocol\Transaction;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * STTransactionEntry
 * PubKey: 32 bytes, (255 bits or 256 with last bit to 0) public key (account address derived from the public key)
 * Amount: max 8 bytes (positive or negative)
 *
 * Generated from protobuf message <code>Catalyst.Protocol.Transaction.STTransactionEntry</code>
 */
class STTransactionEntry extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes PubKey = 1;</code>
     */
    private $PubKey = '';
    /**
     * Generated from protobuf field <code>uint64 Amount = 2;</code>
     */
    private $Amount = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $PubKey
     *     @type int|string $Amount
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes PubKey = 1;</code>
     * @return string
     */
    public function getPubKey()
    {
        return $this->PubKey;
    }

    /**
     * Generated from protobuf field <code>bytes PubKey = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPubKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->PubKey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 Amount = 2;</code>
     * @return int|string
     */
    public function getAmount()
    {
        return $this->Amount;
    }

    /**
     * Generated from protobuf field <code>uint64 Amount = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkUint64($var);
        $this->Amount = $var;

        return $this;
    }

}

