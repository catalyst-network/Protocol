// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Account.proto

#ifndef PROTOBUF_Account_2eproto__INCLUDED
#define PROTOBUF_Account_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Cryptography.pb.h"
#include "Network.pb.h"
// @@protoc_insertion_point(includes)
namespace Catalyst {
namespace Protocol {
namespace Account {
class Address;
class AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
}  // namespace Account
namespace Cryptography {
class Signature;
class SignatureDefaultTypeInternal;
extern SignatureDefaultTypeInternal _Signature_default_instance_;
class SigningContext;
class SigningContextDefaultTypeInternal;
extern SigningContextDefaultTypeInternal _SigningContext_default_instance_;
}  // namespace Cryptography
namespace Network {
}  // namespace Network
}  // namespace Protocol
}  // namespace Catalyst

namespace Catalyst {
namespace Protocol {
namespace Account {

namespace protobuf_Account_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Account_2eproto

enum AccountType {
  ACCOUNT_TYPE_UNKNOWN = 0,
  PUBLIC_ACCOUNT = 8,
  CONFIDENTIAL_ACCOUNT = 16,
  SMART_CONTRACT_ACCOUNT = 24,
  AccountType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccountType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccountType_IsValid(int value);
const AccountType AccountType_MIN = ACCOUNT_TYPE_UNKNOWN;
const AccountType AccountType_MAX = SMART_CONTRACT_ACCOUNT;
const int AccountType_ARRAYSIZE = AccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountType_descriptor();
inline const ::std::string& AccountType_Name(AccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountType_descriptor(), value);
}
inline bool AccountType_Parse(
    const ::std::string& name, AccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountType>(
    AccountType_descriptor(), name, value);
}
// ===================================================================

class Address : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.Account.Address) */ {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Address& default_instance();

  static inline const Address* internal_default_instance() {
    return reinterpret_cast<const Address*>(
               &_Address_default_instance_);
  }

  void Swap(Address* other);

  // implements Message ----------------------------------------------

  inline Address* New() const PROTOBUF_FINAL { return New(NULL); }

  Address* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Address* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes public_key_hash = 3;
  void clear_public_key_hash();
  static const int kPublicKeyHashFieldNumber = 3;
  const ::std::string& public_key_hash() const;
  void set_public_key_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key_hash(::std::string&& value);
  #endif
  void set_public_key_hash(const char* value);
  void set_public_key_hash(const void* value, size_t size);
  ::std::string* mutable_public_key_hash();
  ::std::string* release_public_key_hash();
  void set_allocated_public_key_hash(::std::string* public_key_hash);

  // .Catalyst.Protocol.Network.NetworkType network_type = 1;
  void clear_network_type();
  static const int kNetworkTypeFieldNumber = 1;
  ::Catalyst::Protocol::Network::NetworkType network_type() const;
  void set_network_type(::Catalyst::Protocol::Network::NetworkType value);

  // .Catalyst.Protocol.Account.AccountType account_type = 2;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 2;
  ::Catalyst::Protocol::Account::AccountType account_type() const;
  void set_account_type(::Catalyst::Protocol::Account::AccountType value);

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.Account.Address)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_key_hash_;
  int network_type_;
  int account_type_;
  mutable int _cached_size_;
  friend struct  protobuf_Account_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Address

// .Catalyst.Protocol.Network.NetworkType network_type = 1;
inline void Address::clear_network_type() {
  network_type_ = 0;
}
inline ::Catalyst::Protocol::Network::NetworkType Address::network_type() const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.Account.Address.network_type)
  return static_cast< ::Catalyst::Protocol::Network::NetworkType >(network_type_);
}
inline void Address::set_network_type(::Catalyst::Protocol::Network::NetworkType value) {
  
  network_type_ = value;
  // @@protoc_insertion_point(field_set:Catalyst.Protocol.Account.Address.network_type)
}

// .Catalyst.Protocol.Account.AccountType account_type = 2;
inline void Address::clear_account_type() {
  account_type_ = 0;
}
inline ::Catalyst::Protocol::Account::AccountType Address::account_type() const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.Account.Address.account_type)
  return static_cast< ::Catalyst::Protocol::Account::AccountType >(account_type_);
}
inline void Address::set_account_type(::Catalyst::Protocol::Account::AccountType value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:Catalyst.Protocol.Account.Address.account_type)
}

// bytes public_key_hash = 3;
inline void Address::clear_public_key_hash() {
  public_key_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::public_key_hash() const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.Account.Address.public_key_hash)
  return public_key_hash_.GetNoArena();
}
inline void Address::set_public_key_hash(const ::std::string& value) {
  
  public_key_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Catalyst.Protocol.Account.Address.public_key_hash)
}
#if LANG_CXX11
inline void Address::set_public_key_hash(::std::string&& value) {
  
  public_key_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Catalyst.Protocol.Account.Address.public_key_hash)
}
#endif
inline void Address::set_public_key_hash(const char* value) {
  
  public_key_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Catalyst.Protocol.Account.Address.public_key_hash)
}
inline void Address::set_public_key_hash(const void* value, size_t size) {
  
  public_key_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Catalyst.Protocol.Account.Address.public_key_hash)
}
inline ::std::string* Address::mutable_public_key_hash() {
  
  // @@protoc_insertion_point(field_mutable:Catalyst.Protocol.Account.Address.public_key_hash)
  return public_key_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_public_key_hash() {
  // @@protoc_insertion_point(field_release:Catalyst.Protocol.Account.Address.public_key_hash)
  
  return public_key_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_public_key_hash(::std::string* public_key_hash) {
  if (public_key_hash != NULL) {
    
  } else {
    
  }
  public_key_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_hash);
  // @@protoc_insertion_point(field_set_allocated:Catalyst.Protocol.Account.Address.public_key_hash)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Account
}  // namespace Protocol
}  // namespace Catalyst

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Catalyst::Protocol::Account::AccountType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Catalyst::Protocol::Account::AccountType>() {
  return ::Catalyst::Protocol::Account::AccountType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Account_2eproto__INCLUDED
