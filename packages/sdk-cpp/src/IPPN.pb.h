// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IPPN.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_IPPN_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_IPPN_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Peer.pb.h"
#include "Deltas.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_IPPN_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_IPPN_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_IPPN_2eproto;
namespace Catalyst {
namespace Protocol {
namespace IPPN {
class DeltaHistoryRequest;
class DeltaHistoryRequestDefaultTypeInternal;
extern DeltaHistoryRequestDefaultTypeInternal _DeltaHistoryRequest_default_instance_;
class DeltaHistoryResponse;
class DeltaHistoryResponseDefaultTypeInternal;
extern DeltaHistoryResponseDefaultTypeInternal _DeltaHistoryResponse_default_instance_;
class LatestDeltaHashRequest;
class LatestDeltaHashRequestDefaultTypeInternal;
extern LatestDeltaHashRequestDefaultTypeInternal _LatestDeltaHashRequest_default_instance_;
class LatestDeltaHashResponse;
class LatestDeltaHashResponseDefaultTypeInternal;
extern LatestDeltaHashResponseDefaultTypeInternal _LatestDeltaHashResponse_default_instance_;
class PeerNeighborsRequest;
class PeerNeighborsRequestDefaultTypeInternal;
extern PeerNeighborsRequestDefaultTypeInternal _PeerNeighborsRequest_default_instance_;
class PeerNeighborsResponse;
class PeerNeighborsResponseDefaultTypeInternal;
extern PeerNeighborsResponseDefaultTypeInternal _PeerNeighborsResponse_default_instance_;
class PingRequest;
class PingRequestDefaultTypeInternal;
extern PingRequestDefaultTypeInternal _PingRequest_default_instance_;
class PingResponse;
class PingResponseDefaultTypeInternal;
extern PingResponseDefaultTypeInternal _PingResponse_default_instance_;
}  // namespace IPPN
}  // namespace Protocol
}  // namespace Catalyst
PROTOBUF_NAMESPACE_OPEN
template<> ::Catalyst::Protocol::IPPN::DeltaHistoryRequest* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::DeltaHistoryRequest>(Arena*);
template<> ::Catalyst::Protocol::IPPN::DeltaHistoryResponse* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::DeltaHistoryResponse>(Arena*);
template<> ::Catalyst::Protocol::IPPN::LatestDeltaHashRequest* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::LatestDeltaHashRequest>(Arena*);
template<> ::Catalyst::Protocol::IPPN::LatestDeltaHashResponse* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::LatestDeltaHashResponse>(Arena*);
template<> ::Catalyst::Protocol::IPPN::PeerNeighborsRequest* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::PeerNeighborsRequest>(Arena*);
template<> ::Catalyst::Protocol::IPPN::PeerNeighborsResponse* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::PeerNeighborsResponse>(Arena*);
template<> ::Catalyst::Protocol::IPPN::PingRequest* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::PingRequest>(Arena*);
template<> ::Catalyst::Protocol::IPPN::PingResponse* Arena::CreateMaybeMessage<::Catalyst::Protocol::IPPN::PingResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Catalyst {
namespace Protocol {
namespace IPPN {

// ===================================================================

class PeerNeighborsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.PeerNeighborsRequest) */ {
 public:
  PeerNeighborsRequest();
  virtual ~PeerNeighborsRequest();

  PeerNeighborsRequest(const PeerNeighborsRequest& from);
  PeerNeighborsRequest(PeerNeighborsRequest&& from) noexcept
    : PeerNeighborsRequest() {
    *this = ::std::move(from);
  }

  inline PeerNeighborsRequest& operator=(const PeerNeighborsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerNeighborsRequest& operator=(PeerNeighborsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PeerNeighborsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PeerNeighborsRequest* internal_default_instance() {
    return reinterpret_cast<const PeerNeighborsRequest*>(
               &_PeerNeighborsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PeerNeighborsRequest& a, PeerNeighborsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PeerNeighborsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PeerNeighborsRequest* New() const final {
    return CreateMaybeMessage<PeerNeighborsRequest>(nullptr);
  }

  PeerNeighborsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PeerNeighborsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PeerNeighborsRequest& from);
  void MergeFrom(const PeerNeighborsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PeerNeighborsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.PeerNeighborsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class PeerNeighborsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.PeerNeighborsResponse) */ {
 public:
  PeerNeighborsResponse();
  virtual ~PeerNeighborsResponse();

  PeerNeighborsResponse(const PeerNeighborsResponse& from);
  PeerNeighborsResponse(PeerNeighborsResponse&& from) noexcept
    : PeerNeighborsResponse() {
    *this = ::std::move(from);
  }

  inline PeerNeighborsResponse& operator=(const PeerNeighborsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerNeighborsResponse& operator=(PeerNeighborsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PeerNeighborsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PeerNeighborsResponse* internal_default_instance() {
    return reinterpret_cast<const PeerNeighborsResponse*>(
               &_PeerNeighborsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PeerNeighborsResponse& a, PeerNeighborsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PeerNeighborsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PeerNeighborsResponse* New() const final {
    return CreateMaybeMessage<PeerNeighborsResponse>(nullptr);
  }

  PeerNeighborsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PeerNeighborsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PeerNeighborsResponse& from);
  void MergeFrom(const PeerNeighborsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PeerNeighborsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.PeerNeighborsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPeersFieldNumber = 1,
  };
  // repeated .Catalyst.Protocol.Peer.PeerId peers = 1;
  int peers_size() const;
  private:
  int _internal_peers_size() const;
  public:
  void clear_peers();
  ::Catalyst::Protocol::Peer::PeerId* mutable_peers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Peer::PeerId >*
      mutable_peers();
  private:
  const ::Catalyst::Protocol::Peer::PeerId& _internal_peers(int index) const;
  ::Catalyst::Protocol::Peer::PeerId* _internal_add_peers();
  public:
  const ::Catalyst::Protocol::Peer::PeerId& peers(int index) const;
  ::Catalyst::Protocol::Peer::PeerId* add_peers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Peer::PeerId >&
      peers() const;

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Peer::PeerId > peers_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class PingRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.PingRequest) */ {
 public:
  PingRequest();
  virtual ~PingRequest();

  PingRequest(const PingRequest& from);
  PingRequest(PingRequest&& from) noexcept
    : PingRequest() {
    *this = ::std::move(from);
  }

  inline PingRequest& operator=(const PingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingRequest& operator=(PingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingRequest* internal_default_instance() {
    return reinterpret_cast<const PingRequest*>(
               &_PingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PingRequest& a, PingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PingRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PingRequest* New() const final {
    return CreateMaybeMessage<PingRequest>(nullptr);
  }

  PingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PingRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PingRequest& from);
  void MergeFrom(const PingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.PingRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.PingRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class PingResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.PingResponse) */ {
 public:
  PingResponse();
  virtual ~PingResponse();

  PingResponse(const PingResponse& from);
  PingResponse(PingResponse&& from) noexcept
    : PingResponse() {
    *this = ::std::move(from);
  }

  inline PingResponse& operator=(const PingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingResponse& operator=(PingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingResponse* internal_default_instance() {
    return reinterpret_cast<const PingResponse*>(
               &_PingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PingResponse& a, PingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PingResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PingResponse* New() const final {
    return CreateMaybeMessage<PingResponse>(nullptr);
  }

  PingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PingResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PingResponse& from);
  void MergeFrom(const PingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.PingResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.PingResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class LatestDeltaHashRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.LatestDeltaHashRequest) */ {
 public:
  LatestDeltaHashRequest();
  virtual ~LatestDeltaHashRequest();

  LatestDeltaHashRequest(const LatestDeltaHashRequest& from);
  LatestDeltaHashRequest(LatestDeltaHashRequest&& from) noexcept
    : LatestDeltaHashRequest() {
    *this = ::std::move(from);
  }

  inline LatestDeltaHashRequest& operator=(const LatestDeltaHashRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatestDeltaHashRequest& operator=(LatestDeltaHashRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LatestDeltaHashRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LatestDeltaHashRequest* internal_default_instance() {
    return reinterpret_cast<const LatestDeltaHashRequest*>(
               &_LatestDeltaHashRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LatestDeltaHashRequest& a, LatestDeltaHashRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LatestDeltaHashRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LatestDeltaHashRequest* New() const final {
    return CreateMaybeMessage<LatestDeltaHashRequest>(nullptr);
  }

  LatestDeltaHashRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LatestDeltaHashRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LatestDeltaHashRequest& from);
  void MergeFrom(const LatestDeltaHashRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LatestDeltaHashRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.LatestDeltaHashRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class LatestDeltaHashResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.LatestDeltaHashResponse) */ {
 public:
  LatestDeltaHashResponse();
  virtual ~LatestDeltaHashResponse();

  LatestDeltaHashResponse(const LatestDeltaHashResponse& from);
  LatestDeltaHashResponse(LatestDeltaHashResponse&& from) noexcept
    : LatestDeltaHashResponse() {
    *this = ::std::move(from);
  }

  inline LatestDeltaHashResponse& operator=(const LatestDeltaHashResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatestDeltaHashResponse& operator=(LatestDeltaHashResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LatestDeltaHashResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LatestDeltaHashResponse* internal_default_instance() {
    return reinterpret_cast<const LatestDeltaHashResponse*>(
               &_LatestDeltaHashResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(LatestDeltaHashResponse& a, LatestDeltaHashResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LatestDeltaHashResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LatestDeltaHashResponse* New() const final {
    return CreateMaybeMessage<LatestDeltaHashResponse>(nullptr);
  }

  LatestDeltaHashResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LatestDeltaHashResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LatestDeltaHashResponse& from);
  void MergeFrom(const LatestDeltaHashResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LatestDeltaHashResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.LatestDeltaHashResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::Catalyst::Protocol::Deltas::DeltaIndex& result() const;
  ::Catalyst::Protocol::Deltas::DeltaIndex* release_result();
  ::Catalyst::Protocol::Deltas::DeltaIndex* mutable_result();
  void set_allocated_result(::Catalyst::Protocol::Deltas::DeltaIndex* result);
  private:
  const ::Catalyst::Protocol::Deltas::DeltaIndex& _internal_result() const;
  ::Catalyst::Protocol::Deltas::DeltaIndex* _internal_mutable_result();
  public:

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::Catalyst::Protocol::Deltas::DeltaIndex* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class DeltaHistoryRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.DeltaHistoryRequest) */ {
 public:
  DeltaHistoryRequest();
  virtual ~DeltaHistoryRequest();

  DeltaHistoryRequest(const DeltaHistoryRequest& from);
  DeltaHistoryRequest(DeltaHistoryRequest&& from) noexcept
    : DeltaHistoryRequest() {
    *this = ::std::move(from);
  }

  inline DeltaHistoryRequest& operator=(const DeltaHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeltaHistoryRequest& operator=(DeltaHistoryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeltaHistoryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeltaHistoryRequest* internal_default_instance() {
    return reinterpret_cast<const DeltaHistoryRequest*>(
               &_DeltaHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeltaHistoryRequest& a, DeltaHistoryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeltaHistoryRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeltaHistoryRequest* New() const final {
    return CreateMaybeMessage<DeltaHistoryRequest>(nullptr);
  }

  DeltaHistoryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeltaHistoryRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeltaHistoryRequest& from);
  void MergeFrom(const DeltaHistoryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeltaHistoryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.DeltaHistoryRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRangeFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // uint32 range = 1;
  void clear_range();
  ::PROTOBUF_NAMESPACE_ID::uint32 range() const;
  void set_range(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_range() const;
  void _internal_set_range(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 height = 2;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 range_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// -------------------------------------------------------------------

class DeltaHistoryResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Catalyst.Protocol.IPPN.DeltaHistoryResponse) */ {
 public:
  DeltaHistoryResponse();
  virtual ~DeltaHistoryResponse();

  DeltaHistoryResponse(const DeltaHistoryResponse& from);
  DeltaHistoryResponse(DeltaHistoryResponse&& from) noexcept
    : DeltaHistoryResponse() {
    *this = ::std::move(from);
  }

  inline DeltaHistoryResponse& operator=(const DeltaHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeltaHistoryResponse& operator=(DeltaHistoryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeltaHistoryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeltaHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const DeltaHistoryResponse*>(
               &_DeltaHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeltaHistoryResponse& a, DeltaHistoryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeltaHistoryResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeltaHistoryResponse* New() const final {
    return CreateMaybeMessage<DeltaHistoryResponse>(nullptr);
  }

  DeltaHistoryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeltaHistoryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeltaHistoryResponse& from);
  void MergeFrom(const DeltaHistoryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeltaHistoryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Catalyst.Protocol.IPPN.DeltaHistoryResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IPPN_2eproto);
    return ::descriptor_table_IPPN_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // repeated .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
  int result_size() const;
  private:
  int _internal_result_size() const;
  public:
  void clear_result();
  ::Catalyst::Protocol::Deltas::DeltaIndex* mutable_result(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Deltas::DeltaIndex >*
      mutable_result();
  private:
  const ::Catalyst::Protocol::Deltas::DeltaIndex& _internal_result(int index) const;
  ::Catalyst::Protocol::Deltas::DeltaIndex* _internal_add_result();
  public:
  const ::Catalyst::Protocol::Deltas::DeltaIndex& result(int index) const;
  ::Catalyst::Protocol::Deltas::DeltaIndex* add_result();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Deltas::DeltaIndex >&
      result() const;

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Deltas::DeltaIndex > result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IPPN_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PeerNeighborsRequest

// -------------------------------------------------------------------

// PeerNeighborsResponse

// repeated .Catalyst.Protocol.Peer.PeerId peers = 1;
inline int PeerNeighborsResponse::_internal_peers_size() const {
  return peers_.size();
}
inline int PeerNeighborsResponse::peers_size() const {
  return _internal_peers_size();
}
inline ::Catalyst::Protocol::Peer::PeerId* PeerNeighborsResponse::mutable_peers(int index) {
  // @@protoc_insertion_point(field_mutable:Catalyst.Protocol.IPPN.PeerNeighborsResponse.peers)
  return peers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Peer::PeerId >*
PeerNeighborsResponse::mutable_peers() {
  // @@protoc_insertion_point(field_mutable_list:Catalyst.Protocol.IPPN.PeerNeighborsResponse.peers)
  return &peers_;
}
inline const ::Catalyst::Protocol::Peer::PeerId& PeerNeighborsResponse::_internal_peers(int index) const {
  return peers_.Get(index);
}
inline const ::Catalyst::Protocol::Peer::PeerId& PeerNeighborsResponse::peers(int index) const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.IPPN.PeerNeighborsResponse.peers)
  return _internal_peers(index);
}
inline ::Catalyst::Protocol::Peer::PeerId* PeerNeighborsResponse::_internal_add_peers() {
  return peers_.Add();
}
inline ::Catalyst::Protocol::Peer::PeerId* PeerNeighborsResponse::add_peers() {
  // @@protoc_insertion_point(field_add:Catalyst.Protocol.IPPN.PeerNeighborsResponse.peers)
  return _internal_add_peers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Peer::PeerId >&
PeerNeighborsResponse::peers() const {
  // @@protoc_insertion_point(field_list:Catalyst.Protocol.IPPN.PeerNeighborsResponse.peers)
  return peers_;
}

// -------------------------------------------------------------------

// PingRequest

// -------------------------------------------------------------------

// PingResponse

// -------------------------------------------------------------------

// LatestDeltaHashRequest

// -------------------------------------------------------------------

// LatestDeltaHashResponse

// .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
inline bool LatestDeltaHashResponse::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool LatestDeltaHashResponse::has_result() const {
  return _internal_has_result();
}
inline const ::Catalyst::Protocol::Deltas::DeltaIndex& LatestDeltaHashResponse::_internal_result() const {
  const ::Catalyst::Protocol::Deltas::DeltaIndex* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Catalyst::Protocol::Deltas::DeltaIndex*>(
      &::Catalyst::Protocol::Deltas::_DeltaIndex_default_instance_);
}
inline const ::Catalyst::Protocol::Deltas::DeltaIndex& LatestDeltaHashResponse::result() const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.IPPN.LatestDeltaHashResponse.result)
  return _internal_result();
}
inline ::Catalyst::Protocol::Deltas::DeltaIndex* LatestDeltaHashResponse::release_result() {
  // @@protoc_insertion_point(field_release:Catalyst.Protocol.IPPN.LatestDeltaHashResponse.result)
  
  ::Catalyst::Protocol::Deltas::DeltaIndex* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::Catalyst::Protocol::Deltas::DeltaIndex* LatestDeltaHashResponse::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::Catalyst::Protocol::Deltas::DeltaIndex>(GetArenaNoVirtual());
    result_ = p;
  }
  return result_;
}
inline ::Catalyst::Protocol::Deltas::DeltaIndex* LatestDeltaHashResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable:Catalyst.Protocol.IPPN.LatestDeltaHashResponse.result)
  return _internal_mutable_result();
}
inline void LatestDeltaHashResponse::set_allocated_result(::Catalyst::Protocol::Deltas::DeltaIndex* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:Catalyst.Protocol.IPPN.LatestDeltaHashResponse.result)
}

// -------------------------------------------------------------------

// DeltaHistoryRequest

// uint32 range = 1;
inline void DeltaHistoryRequest::clear_range() {
  range_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeltaHistoryRequest::_internal_range() const {
  return range_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeltaHistoryRequest::range() const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.IPPN.DeltaHistoryRequest.range)
  return _internal_range();
}
inline void DeltaHistoryRequest::_internal_set_range(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  range_ = value;
}
inline void DeltaHistoryRequest::set_range(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:Catalyst.Protocol.IPPN.DeltaHistoryRequest.range)
}

// uint32 height = 2;
inline void DeltaHistoryRequest::clear_height() {
  height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeltaHistoryRequest::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeltaHistoryRequest::height() const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.IPPN.DeltaHistoryRequest.height)
  return _internal_height();
}
inline void DeltaHistoryRequest::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  height_ = value;
}
inline void DeltaHistoryRequest::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:Catalyst.Protocol.IPPN.DeltaHistoryRequest.height)
}

// -------------------------------------------------------------------

// DeltaHistoryResponse

// repeated .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
inline int DeltaHistoryResponse::_internal_result_size() const {
  return result_.size();
}
inline int DeltaHistoryResponse::result_size() const {
  return _internal_result_size();
}
inline ::Catalyst::Protocol::Deltas::DeltaIndex* DeltaHistoryResponse::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:Catalyst.Protocol.IPPN.DeltaHistoryResponse.result)
  return result_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Deltas::DeltaIndex >*
DeltaHistoryResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:Catalyst.Protocol.IPPN.DeltaHistoryResponse.result)
  return &result_;
}
inline const ::Catalyst::Protocol::Deltas::DeltaIndex& DeltaHistoryResponse::_internal_result(int index) const {
  return result_.Get(index);
}
inline const ::Catalyst::Protocol::Deltas::DeltaIndex& DeltaHistoryResponse::result(int index) const {
  // @@protoc_insertion_point(field_get:Catalyst.Protocol.IPPN.DeltaHistoryResponse.result)
  return _internal_result(index);
}
inline ::Catalyst::Protocol::Deltas::DeltaIndex* DeltaHistoryResponse::_internal_add_result() {
  return result_.Add();
}
inline ::Catalyst::Protocol::Deltas::DeltaIndex* DeltaHistoryResponse::add_result() {
  // @@protoc_insertion_point(field_add:Catalyst.Protocol.IPPN.DeltaHistoryResponse.result)
  return _internal_add_result();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Catalyst::Protocol::Deltas::DeltaIndex >&
DeltaHistoryResponse::result() const {
  // @@protoc_insertion_point(field_list:Catalyst.Protocol.IPPN.DeltaHistoryResponse.result)
  return result_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IPPN
}  // namespace Protocol
}  // namespace Catalyst

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_IPPN_2eproto
