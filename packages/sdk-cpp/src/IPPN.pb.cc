// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IPPN.proto

#include "IPPN.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Deltas_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeltaIndex_Deltas_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Peer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeerId_Peer_2eproto;
namespace Catalyst {
namespace Protocol {
namespace IPPN {
class PeerNeighborsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeerNeighborsRequest> _instance;
} _PeerNeighborsRequest_default_instance_;
class PeerNeighborsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeerNeighborsResponse> _instance;
} _PeerNeighborsResponse_default_instance_;
class PingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PingRequest> _instance;
} _PingRequest_default_instance_;
class PingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PingResponse> _instance;
} _PingResponse_default_instance_;
class LatestDeltaHashRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LatestDeltaHashRequest> _instance;
} _LatestDeltaHashRequest_default_instance_;
class LatestDeltaHashResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LatestDeltaHashResponse> _instance;
} _LatestDeltaHashResponse_default_instance_;
class DeltaHistoryRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeltaHistoryRequest> _instance;
} _DeltaHistoryRequest_default_instance_;
class DeltaHistoryResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeltaHistoryResponse> _instance;
} _DeltaHistoryResponse_default_instance_;
}  // namespace IPPN
}  // namespace Protocol
}  // namespace Catalyst
static void InitDefaultsscc_info_DeltaHistoryRequest_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_DeltaHistoryRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::DeltaHistoryRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::DeltaHistoryRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeltaHistoryRequest_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeltaHistoryRequest_IPPN_2eproto}, {}};

static void InitDefaultsscc_info_DeltaHistoryResponse_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_DeltaHistoryResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::DeltaHistoryResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::DeltaHistoryResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeltaHistoryResponse_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeltaHistoryResponse_IPPN_2eproto}, {
      &scc_info_DeltaIndex_Deltas_2eproto.base,}};

static void InitDefaultsscc_info_LatestDeltaHashRequest_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_LatestDeltaHashRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::LatestDeltaHashRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::LatestDeltaHashRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LatestDeltaHashRequest_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LatestDeltaHashRequest_IPPN_2eproto}, {}};

static void InitDefaultsscc_info_LatestDeltaHashResponse_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_LatestDeltaHashResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::LatestDeltaHashResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::LatestDeltaHashResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LatestDeltaHashResponse_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LatestDeltaHashResponse_IPPN_2eproto}, {
      &scc_info_DeltaIndex_Deltas_2eproto.base,}};

static void InitDefaultsscc_info_PeerNeighborsRequest_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PeerNeighborsRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PeerNeighborsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PeerNeighborsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeerNeighborsRequest_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PeerNeighborsRequest_IPPN_2eproto}, {}};

static void InitDefaultsscc_info_PeerNeighborsResponse_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PeerNeighborsResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PeerNeighborsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PeerNeighborsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PeerNeighborsResponse_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PeerNeighborsResponse_IPPN_2eproto}, {
      &scc_info_PeerId_Peer_2eproto.base,}};

static void InitDefaultsscc_info_PingRequest_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PingRequest_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PingRequest_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PingRequest_IPPN_2eproto}, {}};

static void InitDefaultsscc_info_PingResponse_IPPN_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Catalyst::Protocol::IPPN::_PingResponse_default_instance_;
    new (ptr) ::Catalyst::Protocol::IPPN::PingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Catalyst::Protocol::IPPN::PingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PingResponse_IPPN_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PingResponse_IPPN_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_IPPN_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_IPPN_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_IPPN_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_IPPN_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PeerNeighborsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PeerNeighborsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PeerNeighborsResponse, peers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::PingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::LatestDeltaHashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::LatestDeltaHashResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::LatestDeltaHashResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::DeltaHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::DeltaHistoryRequest, range_),
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::DeltaHistoryRequest, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::DeltaHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Catalyst::Protocol::IPPN::DeltaHistoryResponse, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Catalyst::Protocol::IPPN::PeerNeighborsRequest)},
  { 5, -1, sizeof(::Catalyst::Protocol::IPPN::PeerNeighborsResponse)},
  { 11, -1, sizeof(::Catalyst::Protocol::IPPN::PingRequest)},
  { 16, -1, sizeof(::Catalyst::Protocol::IPPN::PingResponse)},
  { 21, -1, sizeof(::Catalyst::Protocol::IPPN::LatestDeltaHashRequest)},
  { 26, -1, sizeof(::Catalyst::Protocol::IPPN::LatestDeltaHashResponse)},
  { 32, -1, sizeof(::Catalyst::Protocol::IPPN::DeltaHistoryRequest)},
  { 39, -1, sizeof(::Catalyst::Protocol::IPPN::DeltaHistoryResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_PeerNeighborsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_PeerNeighborsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_PingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_PingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_LatestDeltaHashRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_LatestDeltaHashResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_DeltaHistoryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Catalyst::Protocol::IPPN::_DeltaHistoryResponse_default_instance_),
};

const char descriptor_table_protodef_IPPN_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nIPPN.proto\022\026Catalyst.Protocol.IPPN\032\nPe"
  "er.proto\032\014Deltas.proto\"\026\n\024PeerNeighborsR"
  "equest\"F\n\025PeerNeighborsResponse\022-\n\005peers"
  "\030\001 \003(\0132\036.Catalyst.Protocol.Peer.PeerId\"\r"
  "\n\013PingRequest\"\016\n\014PingResponse\"\030\n\026LatestD"
  "eltaHashRequest\"O\n\027LatestDeltaHashRespon"
  "se\0224\n\006result\030\001 \001(\0132$.Catalyst.Protocol.D"
  "eltas.DeltaIndex\"4\n\023DeltaHistoryRequest\022"
  "\r\n\005range\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\"L\n\024DeltaH"
  "istoryResponse\0224\n\006result\030\001 \003(\0132$.Catalys"
  "t.Protocol.Deltas.DeltaIndexB\002P\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_IPPN_2eproto_deps[2] = {
  &::descriptor_table_Deltas_2eproto,
  &::descriptor_table_Peer_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_IPPN_2eproto_sccs[8] = {
  &scc_info_DeltaHistoryRequest_IPPN_2eproto.base,
  &scc_info_DeltaHistoryResponse_IPPN_2eproto.base,
  &scc_info_LatestDeltaHashRequest_IPPN_2eproto.base,
  &scc_info_LatestDeltaHashResponse_IPPN_2eproto.base,
  &scc_info_PeerNeighborsRequest_IPPN_2eproto.base,
  &scc_info_PeerNeighborsResponse_IPPN_2eproto.base,
  &scc_info_PingRequest_IPPN_2eproto.base,
  &scc_info_PingResponse_IPPN_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_IPPN_2eproto_once;
static bool descriptor_table_IPPN_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_IPPN_2eproto = {
  &descriptor_table_IPPN_2eproto_initialized, descriptor_table_protodef_IPPN_2eproto, "IPPN.proto", 440,
  &descriptor_table_IPPN_2eproto_once, descriptor_table_IPPN_2eproto_sccs, descriptor_table_IPPN_2eproto_deps, 8, 2,
  schemas, file_default_instances, TableStruct_IPPN_2eproto::offsets,
  file_level_metadata_IPPN_2eproto, 8, file_level_enum_descriptors_IPPN_2eproto, file_level_service_descriptors_IPPN_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_IPPN_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_IPPN_2eproto), true);
namespace Catalyst {
namespace Protocol {
namespace IPPN {

// ===================================================================

void PeerNeighborsRequest::InitAsDefaultInstance() {
}
class PeerNeighborsRequest::_Internal {
 public:
};

PeerNeighborsRequest::PeerNeighborsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
}
PeerNeighborsRequest::PeerNeighborsRequest(const PeerNeighborsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
}

void PeerNeighborsRequest::SharedCtor() {
}

PeerNeighborsRequest::~PeerNeighborsRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  SharedDtor();
}

void PeerNeighborsRequest::SharedDtor() {
}

void PeerNeighborsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeerNeighborsRequest& PeerNeighborsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeerNeighborsRequest_IPPN_2eproto.base);
  return *internal_default_instance();
}


void PeerNeighborsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* PeerNeighborsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PeerNeighborsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  return target;
}

size_t PeerNeighborsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeerNeighborsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PeerNeighborsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PeerNeighborsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
    MergeFrom(*source);
  }
}

void PeerNeighborsRequest::MergeFrom(const PeerNeighborsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PeerNeighborsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerNeighborsRequest::CopyFrom(const PeerNeighborsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerNeighborsRequest::IsInitialized() const {
  return true;
}

void PeerNeighborsRequest::InternalSwap(PeerNeighborsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PeerNeighborsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PeerNeighborsResponse::InitAsDefaultInstance() {
}
class PeerNeighborsResponse::_Internal {
 public:
};

void PeerNeighborsResponse::clear_peers() {
  peers_.Clear();
}
PeerNeighborsResponse::PeerNeighborsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
}
PeerNeighborsResponse::PeerNeighborsResponse(const PeerNeighborsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      peers_(from.peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
}

void PeerNeighborsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PeerNeighborsResponse_IPPN_2eproto.base);
}

PeerNeighborsResponse::~PeerNeighborsResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  SharedDtor();
}

void PeerNeighborsResponse::SharedDtor() {
}

void PeerNeighborsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeerNeighborsResponse& PeerNeighborsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeerNeighborsResponse_IPPN_2eproto.base);
  return *internal_default_instance();
}


void PeerNeighborsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  _internal_metadata_.Clear();
}

const char* PeerNeighborsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Catalyst.Protocol.Peer.PeerId peers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_peers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PeerNeighborsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Peer.PeerId peers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_peers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_peers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  return target;
}

size_t PeerNeighborsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Peer.PeerId peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->peers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeerNeighborsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PeerNeighborsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PeerNeighborsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
    MergeFrom(*source);
  }
}

void PeerNeighborsResponse::MergeFrom(const PeerNeighborsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
}

void PeerNeighborsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerNeighborsResponse::CopyFrom(const PeerNeighborsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PeerNeighborsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerNeighborsResponse::IsInitialized() const {
  return true;
}

void PeerNeighborsResponse::InternalSwap(PeerNeighborsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  peers_.InternalSwap(&other->peers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PeerNeighborsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PingRequest::InitAsDefaultInstance() {
}
class PingRequest::_Internal {
 public:
};

PingRequest::PingRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PingRequest)
}

void PingRequest::SharedCtor() {
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
}

void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PingRequest& PingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PingRequest_IPPN_2eproto.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* PingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PingResponse::InitAsDefaultInstance() {
}
class PingResponse::_Internal {
 public:
};

PingResponse::PingResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.PingResponse)
}
PingResponse::PingResponse(const PingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.PingResponse)
}

void PingResponse::SharedCtor() {
}

PingResponse::~PingResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.PingResponse)
  SharedDtor();
}

void PingResponse::SharedDtor() {
}

void PingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PingResponse& PingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PingResponse_IPPN_2eproto.base);
  return *internal_default_instance();
}


void PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.PingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* PingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.PingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.PingResponse)
  return target;
}

size_t PingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.PingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.PingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.PingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.PingResponse)
    MergeFrom(*source);
  }
}

void PingResponse::MergeFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.PingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingResponse::CopyFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingResponse::IsInitialized() const {
  return true;
}

void PingResponse::InternalSwap(PingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LatestDeltaHashRequest::InitAsDefaultInstance() {
}
class LatestDeltaHashRequest::_Internal {
 public:
};

LatestDeltaHashRequest::LatestDeltaHashRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
}
LatestDeltaHashRequest::LatestDeltaHashRequest(const LatestDeltaHashRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
}

void LatestDeltaHashRequest::SharedCtor() {
}

LatestDeltaHashRequest::~LatestDeltaHashRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  SharedDtor();
}

void LatestDeltaHashRequest::SharedDtor() {
}

void LatestDeltaHashRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LatestDeltaHashRequest& LatestDeltaHashRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LatestDeltaHashRequest_IPPN_2eproto.base);
  return *internal_default_instance();
}


void LatestDeltaHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* LatestDeltaHashRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LatestDeltaHashRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  return target;
}

size_t LatestDeltaHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatestDeltaHashRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LatestDeltaHashRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LatestDeltaHashRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
    MergeFrom(*source);
  }
}

void LatestDeltaHashRequest::MergeFrom(const LatestDeltaHashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LatestDeltaHashRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatestDeltaHashRequest::CopyFrom(const LatestDeltaHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatestDeltaHashRequest::IsInitialized() const {
  return true;
}

void LatestDeltaHashRequest::InternalSwap(LatestDeltaHashRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LatestDeltaHashRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LatestDeltaHashResponse::InitAsDefaultInstance() {
  ::Catalyst::Protocol::IPPN::_LatestDeltaHashResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::Catalyst::Protocol::Deltas::DeltaIndex*>(
      ::Catalyst::Protocol::Deltas::DeltaIndex::internal_default_instance());
}
class LatestDeltaHashResponse::_Internal {
 public:
  static const ::Catalyst::Protocol::Deltas::DeltaIndex& result(const LatestDeltaHashResponse* msg);
};

const ::Catalyst::Protocol::Deltas::DeltaIndex&
LatestDeltaHashResponse::_Internal::result(const LatestDeltaHashResponse* msg) {
  return *msg->result_;
}
void LatestDeltaHashResponse::clear_result() {
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
LatestDeltaHashResponse::LatestDeltaHashResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
}
LatestDeltaHashResponse::LatestDeltaHashResponse(const LatestDeltaHashResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::Catalyst::Protocol::Deltas::DeltaIndex(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
}

void LatestDeltaHashResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LatestDeltaHashResponse_IPPN_2eproto.base);
  result_ = nullptr;
}

LatestDeltaHashResponse::~LatestDeltaHashResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  SharedDtor();
}

void LatestDeltaHashResponse::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void LatestDeltaHashResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LatestDeltaHashResponse& LatestDeltaHashResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LatestDeltaHashResponse_IPPN_2eproto.base);
  return *internal_default_instance();
}


void LatestDeltaHashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear();
}

const char* LatestDeltaHashResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LatestDeltaHashResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  return target;
}

size_t LatestDeltaHashResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatestDeltaHashResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LatestDeltaHashResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LatestDeltaHashResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
    MergeFrom(*source);
  }
}

void LatestDeltaHashResponse::MergeFrom(const LatestDeltaHashResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::Catalyst::Protocol::Deltas::DeltaIndex::MergeFrom(from._internal_result());
  }
}

void LatestDeltaHashResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatestDeltaHashResponse::CopyFrom(const LatestDeltaHashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.LatestDeltaHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatestDeltaHashResponse::IsInitialized() const {
  return true;
}

void LatestDeltaHashResponse::InternalSwap(LatestDeltaHashResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LatestDeltaHashResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeltaHistoryRequest::InitAsDefaultInstance() {
}
class DeltaHistoryRequest::_Internal {
 public:
};

DeltaHistoryRequest::DeltaHistoryRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
}
DeltaHistoryRequest::DeltaHistoryRequest(const DeltaHistoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_, &from.range_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&range_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
}

void DeltaHistoryRequest::SharedCtor() {
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&range_)) + sizeof(height_));
}

DeltaHistoryRequest::~DeltaHistoryRequest() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  SharedDtor();
}

void DeltaHistoryRequest::SharedDtor() {
}

void DeltaHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeltaHistoryRequest& DeltaHistoryRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeltaHistoryRequest_IPPN_2eproto.base);
  return *internal_default_instance();
}


void DeltaHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&range_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

const char* DeltaHistoryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 range = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          range_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeltaHistoryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 range = 1;
  if (this->range() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_range(), target);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  return target;
}

size_t DeltaHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 range = 1;
  if (this->range() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_range());
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeltaHistoryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeltaHistoryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeltaHistoryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
    MergeFrom(*source);
  }
}

void DeltaHistoryRequest::MergeFrom(const DeltaHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range() != 0) {
    _internal_set_range(from._internal_range());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void DeltaHistoryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeltaHistoryRequest::CopyFrom(const DeltaHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.DeltaHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaHistoryRequest::IsInitialized() const {
  return true;
}

void DeltaHistoryRequest::InternalSwap(DeltaHistoryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(range_, other->range_);
  swap(height_, other->height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaHistoryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeltaHistoryResponse::InitAsDefaultInstance() {
}
class DeltaHistoryResponse::_Internal {
 public:
};

void DeltaHistoryResponse::clear_result() {
  result_.Clear();
}
DeltaHistoryResponse::DeltaHistoryResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
}
DeltaHistoryResponse::DeltaHistoryResponse(const DeltaHistoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      result_(from.result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
}

void DeltaHistoryResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeltaHistoryResponse_IPPN_2eproto.base);
}

DeltaHistoryResponse::~DeltaHistoryResponse() {
  // @@protoc_insertion_point(destructor:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  SharedDtor();
}

void DeltaHistoryResponse::SharedDtor() {
}

void DeltaHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeltaHistoryResponse& DeltaHistoryResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeltaHistoryResponse_IPPN_2eproto.base);
  return *internal_default_instance();
}


void DeltaHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  _internal_metadata_.Clear();
}

const char* DeltaHistoryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeltaHistoryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_result_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_result(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  return target;
}

size_t DeltaHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Catalyst.Protocol.Deltas.DeltaIndex result = 1;
  total_size += 1UL * this->_internal_result_size();
  for (const auto& msg : this->result_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeltaHistoryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeltaHistoryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeltaHistoryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
    MergeFrom(*source);
  }
}

void DeltaHistoryResponse::MergeFrom(const DeltaHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
}

void DeltaHistoryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeltaHistoryResponse::CopyFrom(const DeltaHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Catalyst.Protocol.IPPN.DeltaHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaHistoryResponse::IsInitialized() const {
  return true;
}

void DeltaHistoryResponse::InternalSwap(DeltaHistoryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_.InternalSwap(&other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaHistoryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IPPN
}  // namespace Protocol
}  // namespace Catalyst
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::PeerNeighborsRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PeerNeighborsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PeerNeighborsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::PeerNeighborsResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PeerNeighborsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PeerNeighborsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::PingRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::PingResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::PingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::PingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::LatestDeltaHashRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::LatestDeltaHashRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::LatestDeltaHashRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::LatestDeltaHashResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::LatestDeltaHashResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::LatestDeltaHashResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::DeltaHistoryRequest* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::DeltaHistoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::DeltaHistoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Catalyst::Protocol::IPPN::DeltaHistoryResponse* Arena::CreateMaybeMessage< ::Catalyst::Protocol::IPPN::DeltaHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Catalyst::Protocol::IPPN::DeltaHistoryResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
