<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Rpc.proto

namespace Catalyst\Protocol\Rpc\Node;

use UnexpectedValueException;

/**
 * Protobuf type <code>Catalyst.Protocol.Rpc.Node.ResponseCode</code>
 */
class ResponseCode
{
    /**
     * Generated from protobuf enum <code>PENDING = 0;</code>
     */
    const PENDING = 0;
    /**
     * Generated from protobuf enum <code>SUCCESSFUL = 1;</code>
     */
    const SUCCESSFUL = 1;
    /**
     * Generated from protobuf enum <code>ERROR = 2;</code>
     */
    const ERROR = 2;
    /**
     * Generated from protobuf enum <code>FINISHED = 3;</code>
     */
    const FINISHED = 3;
    /**
     * Generated from protobuf enum <code>EXPIRED = 4;</code>
     */
    const EXPIRED = 4;
    /**
     * Generated from protobuf enum <code>FAILED = 5;</code>
     */
    const FAILED = 5;
    /**
     * Generated from protobuf enum <code>EXISTS = 6;</code>
     */
    const EXISTS = 6;

    private static $valueToName = [
        self::PENDING => 'PENDING',
        self::SUCCESSFUL => 'SUCCESSFUL',
        self::ERROR => 'ERROR',
        self::FINISHED => 'FINISHED',
        self::EXPIRED => 'EXPIRED',
        self::FAILED => 'FAILED',
        self::EXISTS => 'EXISTS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

