<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Network.proto

namespace Catalyst\Protocol\Network;

use UnexpectedValueException;

/**
 * Protobuf type <code>Catalyst.Protocol.Network.NetworkType</code>
 */
class NetworkType
{
    /**
     * un-known network
     *
     * Generated from protobuf enum <code>NETWORK_TYPE_UNKNOWN = 0;</code>
     */
    const NETWORK_TYPE_UNKNOWN = 0;
    /**
     * main live network
     *
     * Generated from protobuf enum <code>MAINNET = 1;</code>
     */
    const MAINNET = 1;
    /**
     * local devnet
     *
     * Generated from protobuf enum <code>DEVNET = 2;</code>
     */
    const DEVNET = 2;
    /**
     * public testnet
     *
     * Generated from protobuf enum <code>TESTNET = 3;</code>
     */
    const TESTNET = 3;

    private static $valueToName = [
        self::NETWORK_TYPE_UNKNOWN => 'NETWORK_TYPE_UNKNOWN',
        self::MAINNET => 'MAINNET',
        self::DEVNET => 'DEVNET',
        self::TESTNET => 'TESTNET',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

