<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Transaction.proto

namespace Catalyst\Protocol\Transaction;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Catalyst.Protocol.Transaction.PublicEntry</code>
 */
class PublicEntry extends \Google\Protobuf\Internal\Message
{
    /**
     * Address of receiver.
     *
     * Generated from protobuf field <code>bytes receiver_address = 1;</code>
     */
    private $receiver_address = '';
    /**
     * Address of sender.
     *
     * Generated from protobuf field <code>bytes sender_address = 2;</code>
     */
    private $sender_address = '';
    /**
     * uint256 amount
     *
     * Generated from protobuf field <code>bytes amount = 3;</code>
     */
    private $amount = '';
    /**
     * Smart contract data.
     *
     * Generated from protobuf field <code>bytes data = 4;</code>
     */
    private $data = '';
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 5;</code>
     */
    private $timestamp = null;
    /**
     * Generated from protobuf field <code>bytes gas_price = 6;</code>
     */
    private $gas_price = '';
    /**
     * Generated from protobuf field <code>uint64 gas_limit = 7;</code>
     */
    private $gas_limit = 0;
    /**
     * 8 bytes, clear text, fees * 10^12
     *
     * Generated from protobuf field <code>bytes transaction_fees = 8;</code>
     */
    private $transaction_fees = '';
    /**
     * A nonce, similar to Ethereum, incremented on each transaction on the account issuing the transaction
     *
     * Generated from protobuf field <code>uint64 nonce = 9;</code>
     */
    private $nonce = 0;
    /**
     * is the ed25519ph context signature
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Cryptography.Signature signature = 10;</code>
     */
    private $signature = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $receiver_address
     *           Address of receiver.
     *     @type string $sender_address
     *           Address of sender.
     *     @type string $amount
     *           uint256 amount
     *     @type string $data
     *           Smart contract data.
     *     @type \Google\Protobuf\Timestamp $timestamp
     *     @type string $gas_price
     *     @type int|string $gas_limit
     *     @type string $transaction_fees
     *           8 bytes, clear text, fees * 10^12
     *     @type int|string $nonce
     *           A nonce, similar to Ethereum, incremented on each transaction on the account issuing the transaction
     *     @type \Catalyst\Protocol\Cryptography\Signature $signature
     *           is the ed25519ph context signature
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Address of receiver.
     *
     * Generated from protobuf field <code>bytes receiver_address = 1;</code>
     * @return string
     */
    public function getReceiverAddress()
    {
        return $this->receiver_address;
    }

    /**
     * Address of receiver.
     *
     * Generated from protobuf field <code>bytes receiver_address = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setReceiverAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->receiver_address = $var;

        return $this;
    }

    /**
     * Address of sender.
     *
     * Generated from protobuf field <code>bytes sender_address = 2;</code>
     * @return string
     */
    public function getSenderAddress()
    {
        return $this->sender_address;
    }

    /**
     * Address of sender.
     *
     * Generated from protobuf field <code>bytes sender_address = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSenderAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->sender_address = $var;

        return $this;
    }

    /**
     * uint256 amount
     *
     * Generated from protobuf field <code>bytes amount = 3;</code>
     * @return string
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * uint256 amount
     *
     * Generated from protobuf field <code>bytes amount = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkString($var, False);
        $this->amount = $var;

        return $this;
    }

    /**
     * Smart contract data.
     *
     * Generated from protobuf field <code>bytes data = 4;</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Smart contract data.
     *
     * Generated from protobuf field <code>bytes data = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, False);
        $this->data = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 5;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes gas_price = 6;</code>
     * @return string
     */
    public function getGasPrice()
    {
        return $this->gas_price;
    }

    /**
     * Generated from protobuf field <code>bytes gas_price = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setGasPrice($var)
    {
        GPBUtil::checkString($var, False);
        $this->gas_price = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 gas_limit = 7;</code>
     * @return int|string
     */
    public function getGasLimit()
    {
        return $this->gas_limit;
    }

    /**
     * Generated from protobuf field <code>uint64 gas_limit = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->gas_limit = $var;

        return $this;
    }

    /**
     * 8 bytes, clear text, fees * 10^12
     *
     * Generated from protobuf field <code>bytes transaction_fees = 8;</code>
     * @return string
     */
    public function getTransactionFees()
    {
        return $this->transaction_fees;
    }

    /**
     * 8 bytes, clear text, fees * 10^12
     *
     * Generated from protobuf field <code>bytes transaction_fees = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setTransactionFees($var)
    {
        GPBUtil::checkString($var, False);
        $this->transaction_fees = $var;

        return $this;
    }

    /**
     * A nonce, similar to Ethereum, incremented on each transaction on the account issuing the transaction
     *
     * Generated from protobuf field <code>uint64 nonce = 9;</code>
     * @return int|string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * A nonce, similar to Ethereum, incremented on each transaction on the account issuing the transaction
     *
     * Generated from protobuf field <code>uint64 nonce = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkUint64($var);
        $this->nonce = $var;

        return $this;
    }

    /**
     * is the ed25519ph context signature
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Cryptography.Signature signature = 10;</code>
     * @return \Catalyst\Protocol\Cryptography\Signature
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * is the ed25519ph context signature
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Cryptography.Signature signature = 10;</code>
     * @param \Catalyst\Protocol\Cryptography\Signature $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkMessage($var, \Catalyst\Protocol\Cryptography\Signature::class);
        $this->signature = $var;

        return $this;
    }

}

