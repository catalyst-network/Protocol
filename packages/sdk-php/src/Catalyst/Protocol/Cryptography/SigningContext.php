<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Cryptography.proto

namespace Catalyst\Protocol\Cryptography;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Catalyst.Protocol.Cryptography.SigningContext</code>
 */
class SigningContext extends \Google\Protobuf\Internal\Message
{
    /**
     * is the network enum (mainet / devnet etc).
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Network.NetworkType network_type = 1;</code>
     */
    protected $network_type = 0;
    /**
     * contains info on whether the signature is for a protocol message or a transaction.
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Cryptography.SignatureType signature_type = 2;</code>
     */
    protected $signature_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $network_type
     *           is the network enum (mainet / devnet etc).
     *     @type int $signature_type
     *           contains info on whether the signature is for a protocol message or a transaction.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cryptography::initOnce();
        parent::__construct($data);
    }

    /**
     * is the network enum (mainet / devnet etc).
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Network.NetworkType network_type = 1;</code>
     * @return int
     */
    public function getNetworkType()
    {
        return $this->network_type;
    }

    /**
     * is the network enum (mainet / devnet etc).
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Network.NetworkType network_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setNetworkType($var)
    {
        GPBUtil::checkEnum($var, \Catalyst\Protocol\Network\NetworkType::class);
        $this->network_type = $var;

        return $this;
    }

    /**
     * contains info on whether the signature is for a protocol message or a transaction.
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Cryptography.SignatureType signature_type = 2;</code>
     * @return int
     */
    public function getSignatureType()
    {
        return $this->signature_type;
    }

    /**
     * contains info on whether the signature is for a protocol message or a transaction.
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Cryptography.SignatureType signature_type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setSignatureType($var)
    {
        GPBUtil::checkEnum($var, \Catalyst\Protocol\Cryptography\SignatureType::class);
        $this->signature_type = $var;

        return $this;
    }

}

