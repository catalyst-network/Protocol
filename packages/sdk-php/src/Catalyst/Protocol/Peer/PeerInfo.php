<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Peer.proto

namespace Catalyst\Protocol\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>Catalyst.Protocol.Peer.PeerInfo</code>
 */
class PeerInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * is peerId of network
     * </pre>
     *
     * <code>.Catalyst.Protocol.Peer.PeerId peer_id = 1;</code>
     */
    private $peer_id = null;
    /**
     * <pre>
     * reputation of peer
     * </pre>
     *
     * <code>sint32 reputation = 2;</code>
     */
    private $reputation = 0;
    /**
     * <pre>
     * is to check if the peer is blackListed
     * </pre>
     *
     * <code>bool is_blacklisted = 3;</code>
     */
    private $is_blacklisted = false;
    /**
     * <pre>
     * is when the peer cannot be reached on the network
     * </pre>
     *
     * <code>bool is_unreachable = 4;</code>
     */
    private $is_unreachable = false;
    /**
     * <pre>
     * is how long the peer has beekn inactive for
     * </pre>
     *
     * <code>.google.protobuf.Duration inactive_for = 5;</code>
     */
    private $inactive_for = null;
    /**
     * <pre>
     * is when the peer was last seen
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_seen = 6;</code>
     */
    private $last_seen = null;
    /**
     * <pre>
     * modified is when the peer was last modified
     * </pre>
     *
     * <code>.google.protobuf.Timestamp modified = 7;</code>
     */
    private $modified = null;
    /**
     * <pre>
     * created is when the peer was created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 8;</code>
     */
    private $created = null;

    public function __construct() {
        \GPBMetadata\Peer::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * is peerId of network
     * </pre>
     *
     * <code>.Catalyst.Protocol.Peer.PeerId peer_id = 1;</code>
     */
    public function getPeerId()
    {
        return $this->peer_id;
    }

    /**
     * <pre>
     * is peerId of network
     * </pre>
     *
     * <code>.Catalyst.Protocol.Peer.PeerId peer_id = 1;</code>
     */
    public function setPeerId(&$var)
    {
        GPBUtil::checkMessage($var, \Catalyst\Protocol\Peer\PeerId::class);
        $this->peer_id = $var;
    }

    /**
     * <pre>
     * reputation of peer
     * </pre>
     *
     * <code>sint32 reputation = 2;</code>
     */
    public function getReputation()
    {
        return $this->reputation;
    }

    /**
     * <pre>
     * reputation of peer
     * </pre>
     *
     * <code>sint32 reputation = 2;</code>
     */
    public function setReputation($var)
    {
        GPBUtil::checkInt32($var);
        $this->reputation = $var;
    }

    /**
     * <pre>
     * is to check if the peer is blackListed
     * </pre>
     *
     * <code>bool is_blacklisted = 3;</code>
     */
    public function getIsBlacklisted()
    {
        return $this->is_blacklisted;
    }

    /**
     * <pre>
     * is to check if the peer is blackListed
     * </pre>
     *
     * <code>bool is_blacklisted = 3;</code>
     */
    public function setIsBlacklisted($var)
    {
        GPBUtil::checkBool($var);
        $this->is_blacklisted = $var;
    }

    /**
     * <pre>
     * is when the peer cannot be reached on the network
     * </pre>
     *
     * <code>bool is_unreachable = 4;</code>
     */
    public function getIsUnreachable()
    {
        return $this->is_unreachable;
    }

    /**
     * <pre>
     * is when the peer cannot be reached on the network
     * </pre>
     *
     * <code>bool is_unreachable = 4;</code>
     */
    public function setIsUnreachable($var)
    {
        GPBUtil::checkBool($var);
        $this->is_unreachable = $var;
    }

    /**
     * <pre>
     * is how long the peer has beekn inactive for
     * </pre>
     *
     * <code>.google.protobuf.Duration inactive_for = 5;</code>
     */
    public function getInactiveFor()
    {
        return $this->inactive_for;
    }

    /**
     * <pre>
     * is how long the peer has beekn inactive for
     * </pre>
     *
     * <code>.google.protobuf.Duration inactive_for = 5;</code>
     */
    public function setInactiveFor(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->inactive_for = $var;
    }

    /**
     * <pre>
     * is when the peer was last seen
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_seen = 6;</code>
     */
    public function getLastSeen()
    {
        return $this->last_seen;
    }

    /**
     * <pre>
     * is when the peer was last seen
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_seen = 6;</code>
     */
    public function setLastSeen(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->last_seen = $var;
    }

    /**
     * <pre>
     * modified is when the peer was last modified
     * </pre>
     *
     * <code>.google.protobuf.Timestamp modified = 7;</code>
     */
    public function getModified()
    {
        return $this->modified;
    }

    /**
     * <pre>
     * modified is when the peer was last modified
     * </pre>
     *
     * <code>.google.protobuf.Timestamp modified = 7;</code>
     */
    public function setModified(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->modified = $var;
    }

    /**
     * <pre>
     * created is when the peer was created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 8;</code>
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * <pre>
     * created is when the peer was created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 8;</code>
     */
    public function setCreated(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;
    }

}

