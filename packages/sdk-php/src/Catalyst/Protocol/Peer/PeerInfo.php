<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Peer.proto

namespace Catalyst\Protocol\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Catalyst.Protocol.Peer.PeerInfo</code>
 */
class PeerInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * is peerId of network
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId peer_id = 1;</code>
     */
    protected $peer_id = null;
    /**
     * reputation of peer
     *
     * Generated from protobuf field <code>sint32 reputation = 2;</code>
     */
    protected $reputation = 0;
    /**
     * is to check if the peer is blackListed
     *
     * Generated from protobuf field <code>bool is_blacklisted = 3;</code>
     */
    protected $is_blacklisted = false;
    /**
     * is when the peer cannot be reached on the network
     *
     * Generated from protobuf field <code>bool is_unreachable = 4;</code>
     */
    protected $is_unreachable = false;
    /**
     * is how long the peer has beekn inactive for
     *
     * Generated from protobuf field <code>.google.protobuf.Duration inactive_for = 5;</code>
     */
    protected $inactive_for = null;
    /**
     * is when the peer was last seen
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_seen = 6;</code>
     */
    protected $last_seen = null;
    /**
     * modified is when the peer was last modified
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified = 7;</code>
     */
    protected $modified = null;
    /**
     * created is when the peer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 8;</code>
     */
    protected $created = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Catalyst\Protocol\Peer\PeerId $peer_id
     *           is peerId of network
     *     @type int $reputation
     *           reputation of peer
     *     @type bool $is_blacklisted
     *           is to check if the peer is blackListed
     *     @type bool $is_unreachable
     *           is when the peer cannot be reached on the network
     *     @type \Google\Protobuf\Duration $inactive_for
     *           is how long the peer has beekn inactive for
     *     @type \Google\Protobuf\Timestamp $last_seen
     *           is when the peer was last seen
     *     @type \Google\Protobuf\Timestamp $modified
     *           modified is when the peer was last modified
     *     @type \Google\Protobuf\Timestamp $created
     *           created is when the peer was created
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Peer::initOnce();
        parent::__construct($data);
    }

    /**
     * is peerId of network
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId peer_id = 1;</code>
     * @return \Catalyst\Protocol\Peer\PeerId
     */
    public function getPeerId()
    {
        return $this->peer_id;
    }

    /**
     * is peerId of network
     *
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId peer_id = 1;</code>
     * @param \Catalyst\Protocol\Peer\PeerId $var
     * @return $this
     */
    public function setPeerId($var)
    {
        GPBUtil::checkMessage($var, \Catalyst\Protocol\Peer\PeerId::class);
        $this->peer_id = $var;

        return $this;
    }

    /**
     * reputation of peer
     *
     * Generated from protobuf field <code>sint32 reputation = 2;</code>
     * @return int
     */
    public function getReputation()
    {
        return $this->reputation;
    }

    /**
     * reputation of peer
     *
     * Generated from protobuf field <code>sint32 reputation = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setReputation($var)
    {
        GPBUtil::checkInt32($var);
        $this->reputation = $var;

        return $this;
    }

    /**
     * is to check if the peer is blackListed
     *
     * Generated from protobuf field <code>bool is_blacklisted = 3;</code>
     * @return bool
     */
    public function getIsBlacklisted()
    {
        return $this->is_blacklisted;
    }

    /**
     * is to check if the peer is blackListed
     *
     * Generated from protobuf field <code>bool is_blacklisted = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsBlacklisted($var)
    {
        GPBUtil::checkBool($var);
        $this->is_blacklisted = $var;

        return $this;
    }

    /**
     * is when the peer cannot be reached on the network
     *
     * Generated from protobuf field <code>bool is_unreachable = 4;</code>
     * @return bool
     */
    public function getIsUnreachable()
    {
        return $this->is_unreachable;
    }

    /**
     * is when the peer cannot be reached on the network
     *
     * Generated from protobuf field <code>bool is_unreachable = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsUnreachable($var)
    {
        GPBUtil::checkBool($var);
        $this->is_unreachable = $var;

        return $this;
    }

    /**
     * is how long the peer has beekn inactive for
     *
     * Generated from protobuf field <code>.google.protobuf.Duration inactive_for = 5;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getInactiveFor()
    {
        return $this->inactive_for;
    }

    /**
     * is how long the peer has beekn inactive for
     *
     * Generated from protobuf field <code>.google.protobuf.Duration inactive_for = 5;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setInactiveFor($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->inactive_for = $var;

        return $this;
    }

    /**
     * is when the peer was last seen
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_seen = 6;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getLastSeen()
    {
        return $this->last_seen;
    }

    /**
     * is when the peer was last seen
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_seen = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setLastSeen($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->last_seen = $var;

        return $this;
    }

    /**
     * modified is when the peer was last modified
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified = 7;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getModified()
    {
        return $this->modified;
    }

    /**
     * modified is when the peer was last modified
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp modified = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setModified($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->modified = $var;

        return $this;
    }

    /**
     * created is when the peer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 8;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * created is when the peer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

}

