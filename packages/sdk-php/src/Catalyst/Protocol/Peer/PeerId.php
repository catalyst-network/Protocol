<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Peer.proto

namespace Catalyst\Protocol\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 **
 * Aggregated size of the fields in PeerId should be 42 bytes as specified in
 * https://github.com/catalyst-network/protocol-blueprint/blob/master/PeerProtocol.md
 * </pre>
 *
 * Protobuf type <code>Catalyst.Protocol.Peer.PeerId</code>
 */
class PeerId extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>bytes ip = 1;</code>
     */
    private $ip = '';
    /**
     * <pre>
     * 2 bytes
     * </pre>
     *
     * <code>uint32 port = 2;</code>
     */
    private $port = 0;
    /**
     * <pre>
     * Peers public key, node operators are encouraged to use the same, public key across all their nodes.
     * </pre>
     *
     * <code>bytes public_key = 3;</code>
     */
    private $public_key = '';

    public function __construct() {
        \GPBMetadata\Peer::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>bytes ip = 1;</code>
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>bytes ip = 1;</code>
     */
    public function setIp($var)
    {
        GPBUtil::checkString($var, False);
        $this->ip = $var;
    }

    /**
     * <pre>
     * 2 bytes
     * </pre>
     *
     * <code>uint32 port = 2;</code>
     */
    public function getPort()
    {
        return $this->port;
    }

    /**
     * <pre>
     * 2 bytes
     * </pre>
     *
     * <code>uint32 port = 2;</code>
     */
    public function setPort($var)
    {
        GPBUtil::checkUint32($var);
        $this->port = $var;
    }

    /**
     * <pre>
     * Peers public key, node operators are encouraged to use the same, public key across all their nodes.
     * </pre>
     *
     * <code>bytes public_key = 3;</code>
     */
    public function getPublicKey()
    {
        return $this->public_key;
    }

    /**
     * <pre>
     * Peers public key, node operators are encouraged to use the same, public key across all their nodes.
     * </pre>
     *
     * <code>bytes public_key = 3;</code>
     */
    public function setPublicKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->public_key = $var;
    }

}

