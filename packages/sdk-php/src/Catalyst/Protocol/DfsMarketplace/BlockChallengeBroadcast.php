<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: DfsMarketplace.proto

namespace Catalyst\Protocol\DfsMarketplace;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Catalyst.Protocol.DfsMarketplace.BlockChallengeBroadcast</code>
 */
class BlockChallengeBroadcast extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.DfsMarketplace.BlockChallengeRequest original_challenge = 1;</code>
     */
    protected $original_challenge = null;
    /**
     * Generated from protobuf field <code>string answer = 2;</code>
     */
    protected $answer = '';
    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId challenged_peer = 3;</code>
     */
    protected $challenged_peer = null;
    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId challenged_by = 4;</code>
     */
    protected $challenged_by = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Catalyst\Protocol\DfsMarketplace\BlockChallengeRequest $original_challenge
     *     @type string $answer
     *     @type \Catalyst\Protocol\Peer\PeerId $challenged_peer
     *     @type \Catalyst\Protocol\Peer\PeerId $challenged_by
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\DfsMarketplace::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.DfsMarketplace.BlockChallengeRequest original_challenge = 1;</code>
     * @return \Catalyst\Protocol\DfsMarketplace\BlockChallengeRequest
     */
    public function getOriginalChallenge()
    {
        return $this->original_challenge;
    }

    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.DfsMarketplace.BlockChallengeRequest original_challenge = 1;</code>
     * @param \Catalyst\Protocol\DfsMarketplace\BlockChallengeRequest $var
     * @return $this
     */
    public function setOriginalChallenge($var)
    {
        GPBUtil::checkMessage($var, \Catalyst\Protocol\DfsMarketplace\BlockChallengeRequest::class);
        $this->original_challenge = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string answer = 2;</code>
     * @return string
     */
    public function getAnswer()
    {
        return $this->answer;
    }

    /**
     * Generated from protobuf field <code>string answer = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAnswer($var)
    {
        GPBUtil::checkString($var, True);
        $this->answer = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId challenged_peer = 3;</code>
     * @return \Catalyst\Protocol\Peer\PeerId
     */
    public function getChallengedPeer()
    {
        return $this->challenged_peer;
    }

    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId challenged_peer = 3;</code>
     * @param \Catalyst\Protocol\Peer\PeerId $var
     * @return $this
     */
    public function setChallengedPeer($var)
    {
        GPBUtil::checkMessage($var, \Catalyst\Protocol\Peer\PeerId::class);
        $this->challenged_peer = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId challenged_by = 4;</code>
     * @return \Catalyst\Protocol\Peer\PeerId
     */
    public function getChallengedBy()
    {
        return $this->challenged_by;
    }

    /**
     * Generated from protobuf field <code>.Catalyst.Protocol.Peer.PeerId challenged_by = 4;</code>
     * @param \Catalyst\Protocol\Peer\PeerId $var
     * @return $this
     */
    public function setChallengedBy($var)
    {
        GPBUtil::checkMessage($var, \Catalyst\Protocol\Peer\PeerId::class);
        $this->challenged_by = $var;

        return $this;
    }

}

