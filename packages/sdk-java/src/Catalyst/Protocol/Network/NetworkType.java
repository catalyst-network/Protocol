// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Network.proto

package Catalyst.Protocol.Network;

/**
 * Protobuf enum {@code Catalyst.Protocol.Network.NetworkType}
 */
public enum NetworkType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * un-known network
   * </pre>
   *
   * <code>NETWORK_TYPE_UNKNOWN = 0;</code>
   */
  NETWORK_TYPE_UNKNOWN(0),
  /**
   * <pre>
   * main live network
   * </pre>
   *
   * <code>MAINNET = 1;</code>
   */
  MAINNET(1),
  /**
   * <pre>
   * local devnet
   * </pre>
   *
   * <code>DEVNET = 2;</code>
   */
  DEVNET(2),
  /**
   * <pre>
   * public testnet
   * </pre>
   *
   * <code>TESTNET = 3;</code>
   */
  TESTNET(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * un-known network
   * </pre>
   *
   * <code>NETWORK_TYPE_UNKNOWN = 0;</code>
   */
  public static final int NETWORK_TYPE_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * main live network
   * </pre>
   *
   * <code>MAINNET = 1;</code>
   */
  public static final int MAINNET_VALUE = 1;
  /**
   * <pre>
   * local devnet
   * </pre>
   *
   * <code>DEVNET = 2;</code>
   */
  public static final int DEVNET_VALUE = 2;
  /**
   * <pre>
   * public testnet
   * </pre>
   *
   * <code>TESTNET = 3;</code>
   */
  public static final int TESTNET_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static NetworkType valueOf(int value) {
    return forNumber(value);
  }

  public static NetworkType forNumber(int value) {
    switch (value) {
      case 0: return NETWORK_TYPE_UNKNOWN;
      case 1: return MAINNET;
      case 2: return DEVNET;
      case 3: return TESTNET;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<NetworkType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      NetworkType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<NetworkType>() {
          public NetworkType findValueByNumber(int number) {
            return NetworkType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Catalyst.Protocol.Network.Network.getDescriptor().getEnumTypes().get(0);
  }

  private static final NetworkType[] VALUES = values();

  public static NetworkType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private NetworkType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Catalyst.Protocol.Network.NetworkType)
}

