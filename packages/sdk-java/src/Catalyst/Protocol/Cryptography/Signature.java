// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cryptography.proto

package Catalyst.Protocol.Cryptography;

/**
 * Protobuf type {@code Catalyst.Protocol.Cryptography.Signature}
 */
public  final class Signature extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Catalyst.Protocol.Cryptography.Signature)
    SignatureOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Signature.newBuilder() to construct.
  private Signature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Signature() {
    rawBytes_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Signature();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Signature(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            Catalyst.Protocol.Cryptography.SigningContext.Builder subBuilder = null;
            if (signingContext_ != null) {
              subBuilder = signingContext_.toBuilder();
            }
            signingContext_ = input.readMessage(Catalyst.Protocol.Cryptography.SigningContext.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(signingContext_);
              signingContext_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {

            rawBytes_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Catalyst.Protocol.Cryptography.Cryptography.internal_static_Catalyst_Protocol_Cryptography_Signature_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Catalyst.Protocol.Cryptography.Cryptography.internal_static_Catalyst_Protocol_Cryptography_Signature_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Catalyst.Protocol.Cryptography.Signature.class, Catalyst.Protocol.Cryptography.Signature.Builder.class);
  }

  public static final int SIGNING_CONTEXT_FIELD_NUMBER = 1;
  private Catalyst.Protocol.Cryptography.SigningContext signingContext_;
  /**
   * <pre>
   * system domain context.
   * </pre>
   *
   * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
   * @return Whether the signingContext field is set.
   */
  public boolean hasSigningContext() {
    return signingContext_ != null;
  }
  /**
   * <pre>
   * system domain context.
   * </pre>
   *
   * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
   * @return The signingContext.
   */
  public Catalyst.Protocol.Cryptography.SigningContext getSigningContext() {
    return signingContext_ == null ? Catalyst.Protocol.Cryptography.SigningContext.getDefaultInstance() : signingContext_;
  }
  /**
   * <pre>
   * system domain context.
   * </pre>
   *
   * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
   */
  public Catalyst.Protocol.Cryptography.SigningContextOrBuilder getSigningContextOrBuilder() {
    return getSigningContext();
  }

  public static final int RAW_BYTES_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString rawBytes_;
  /**
   * <pre>
   * signature digest.
   * </pre>
   *
   * <code>bytes raw_bytes = 2;</code>
   * @return The rawBytes.
   */
  public com.google.protobuf.ByteString getRawBytes() {
    return rawBytes_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (signingContext_ != null) {
      output.writeMessage(1, getSigningContext());
    }
    if (!rawBytes_.isEmpty()) {
      output.writeBytes(2, rawBytes_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (signingContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSigningContext());
    }
    if (!rawBytes_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, rawBytes_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Catalyst.Protocol.Cryptography.Signature)) {
      return super.equals(obj);
    }
    Catalyst.Protocol.Cryptography.Signature other = (Catalyst.Protocol.Cryptography.Signature) obj;

    if (hasSigningContext() != other.hasSigningContext()) return false;
    if (hasSigningContext()) {
      if (!getSigningContext()
          .equals(other.getSigningContext())) return false;
    }
    if (!getRawBytes()
        .equals(other.getRawBytes())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSigningContext()) {
      hash = (37 * hash) + SIGNING_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getSigningContext().hashCode();
    }
    hash = (37 * hash) + RAW_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getRawBytes().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Catalyst.Protocol.Cryptography.Signature parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Catalyst.Protocol.Cryptography.Signature prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Catalyst.Protocol.Cryptography.Signature}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Catalyst.Protocol.Cryptography.Signature)
      Catalyst.Protocol.Cryptography.SignatureOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Catalyst.Protocol.Cryptography.Cryptography.internal_static_Catalyst_Protocol_Cryptography_Signature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Catalyst.Protocol.Cryptography.Cryptography.internal_static_Catalyst_Protocol_Cryptography_Signature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Catalyst.Protocol.Cryptography.Signature.class, Catalyst.Protocol.Cryptography.Signature.Builder.class);
    }

    // Construct using Catalyst.Protocol.Cryptography.Signature.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (signingContextBuilder_ == null) {
        signingContext_ = null;
      } else {
        signingContext_ = null;
        signingContextBuilder_ = null;
      }
      rawBytes_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Catalyst.Protocol.Cryptography.Cryptography.internal_static_Catalyst_Protocol_Cryptography_Signature_descriptor;
    }

    @java.lang.Override
    public Catalyst.Protocol.Cryptography.Signature getDefaultInstanceForType() {
      return Catalyst.Protocol.Cryptography.Signature.getDefaultInstance();
    }

    @java.lang.Override
    public Catalyst.Protocol.Cryptography.Signature build() {
      Catalyst.Protocol.Cryptography.Signature result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public Catalyst.Protocol.Cryptography.Signature buildPartial() {
      Catalyst.Protocol.Cryptography.Signature result = new Catalyst.Protocol.Cryptography.Signature(this);
      if (signingContextBuilder_ == null) {
        result.signingContext_ = signingContext_;
      } else {
        result.signingContext_ = signingContextBuilder_.build();
      }
      result.rawBytes_ = rawBytes_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Catalyst.Protocol.Cryptography.Signature) {
        return mergeFrom((Catalyst.Protocol.Cryptography.Signature)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Catalyst.Protocol.Cryptography.Signature other) {
      if (other == Catalyst.Protocol.Cryptography.Signature.getDefaultInstance()) return this;
      if (other.hasSigningContext()) {
        mergeSigningContext(other.getSigningContext());
      }
      if (other.getRawBytes() != com.google.protobuf.ByteString.EMPTY) {
        setRawBytes(other.getRawBytes());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Catalyst.Protocol.Cryptography.Signature parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Catalyst.Protocol.Cryptography.Signature) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Catalyst.Protocol.Cryptography.SigningContext signingContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Catalyst.Protocol.Cryptography.SigningContext, Catalyst.Protocol.Cryptography.SigningContext.Builder, Catalyst.Protocol.Cryptography.SigningContextOrBuilder> signingContextBuilder_;
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     * @return Whether the signingContext field is set.
     */
    public boolean hasSigningContext() {
      return signingContextBuilder_ != null || signingContext_ != null;
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     * @return The signingContext.
     */
    public Catalyst.Protocol.Cryptography.SigningContext getSigningContext() {
      if (signingContextBuilder_ == null) {
        return signingContext_ == null ? Catalyst.Protocol.Cryptography.SigningContext.getDefaultInstance() : signingContext_;
      } else {
        return signingContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    public Builder setSigningContext(Catalyst.Protocol.Cryptography.SigningContext value) {
      if (signingContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signingContext_ = value;
        onChanged();
      } else {
        signingContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    public Builder setSigningContext(
        Catalyst.Protocol.Cryptography.SigningContext.Builder builderForValue) {
      if (signingContextBuilder_ == null) {
        signingContext_ = builderForValue.build();
        onChanged();
      } else {
        signingContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    public Builder mergeSigningContext(Catalyst.Protocol.Cryptography.SigningContext value) {
      if (signingContextBuilder_ == null) {
        if (signingContext_ != null) {
          signingContext_ =
            Catalyst.Protocol.Cryptography.SigningContext.newBuilder(signingContext_).mergeFrom(value).buildPartial();
        } else {
          signingContext_ = value;
        }
        onChanged();
      } else {
        signingContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    public Builder clearSigningContext() {
      if (signingContextBuilder_ == null) {
        signingContext_ = null;
        onChanged();
      } else {
        signingContext_ = null;
        signingContextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    public Catalyst.Protocol.Cryptography.SigningContext.Builder getSigningContextBuilder() {
      
      onChanged();
      return getSigningContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    public Catalyst.Protocol.Cryptography.SigningContextOrBuilder getSigningContextOrBuilder() {
      if (signingContextBuilder_ != null) {
        return signingContextBuilder_.getMessageOrBuilder();
      } else {
        return signingContext_ == null ?
            Catalyst.Protocol.Cryptography.SigningContext.getDefaultInstance() : signingContext_;
      }
    }
    /**
     * <pre>
     * system domain context.
     * </pre>
     *
     * <code>.Catalyst.Protocol.Cryptography.SigningContext signing_context = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Catalyst.Protocol.Cryptography.SigningContext, Catalyst.Protocol.Cryptography.SigningContext.Builder, Catalyst.Protocol.Cryptography.SigningContextOrBuilder> 
        getSigningContextFieldBuilder() {
      if (signingContextBuilder_ == null) {
        signingContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Catalyst.Protocol.Cryptography.SigningContext, Catalyst.Protocol.Cryptography.SigningContext.Builder, Catalyst.Protocol.Cryptography.SigningContextOrBuilder>(
                getSigningContext(),
                getParentForChildren(),
                isClean());
        signingContext_ = null;
      }
      return signingContextBuilder_;
    }

    private com.google.protobuf.ByteString rawBytes_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * signature digest.
     * </pre>
     *
     * <code>bytes raw_bytes = 2;</code>
     * @return The rawBytes.
     */
    public com.google.protobuf.ByteString getRawBytes() {
      return rawBytes_;
    }
    /**
     * <pre>
     * signature digest.
     * </pre>
     *
     * <code>bytes raw_bytes = 2;</code>
     * @param value The rawBytes to set.
     * @return This builder for chaining.
     */
    public Builder setRawBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      rawBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * signature digest.
     * </pre>
     *
     * <code>bytes raw_bytes = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRawBytes() {
      
      rawBytes_ = getDefaultInstance().getRawBytes();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Catalyst.Protocol.Cryptography.Signature)
  }

  // @@protoc_insertion_point(class_scope:Catalyst.Protocol.Cryptography.Signature)
  private static final Catalyst.Protocol.Cryptography.Signature DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Catalyst.Protocol.Cryptography.Signature();
  }

  public static Catalyst.Protocol.Cryptography.Signature getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Signature>
      PARSER = new com.google.protobuf.AbstractParser<Signature>() {
    @java.lang.Override
    public Signature parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Signature(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Signature> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Signature> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public Catalyst.Protocol.Cryptography.Signature getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

