// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Account.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

GPB_ENUM_FWD_DECLARE(NetworkType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum AccountType

/** We need to leave the 3 first bits for the NetworkType and can use the rest for the AccountType */
typedef GPB_ENUM(AccountType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AccountType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Un-known account type. */
  AccountType_AccountTypeUnknown = 0,

  /** Public account type. */
  AccountType_PublicAccount = 8,

  /** Confidential account type. */
  AccountType_ConfidentialAccount = 16,

  /** Smart contract account type {TO BE DEPRECATED}. */
  AccountType_SmartContractAccount = 24,
};

GPBEnumDescriptor *AccountType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AccountType_IsValidValue(int32_t value);

#pragma mark - AccountRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface AccountRoot : GPBRootObject
@end

#pragma mark - Address

typedef GPB_ENUM(Address_FieldNumber) {
  Address_FieldNumber_NetworkType = 1,
  Address_FieldNumber_AccountType = 2,
  Address_FieldNumber_PublicKeyHash = 3,
};

@interface Address : GPBMessage

/** bit signalling the network type */
@property(nonatomic, readwrite) enum NetworkType networkType;

/** bit signalling the type of account */
@property(nonatomic, readwrite) AccountType accountType;

/** multihash of the public key */
@property(nonatomic, readwrite, copy, null_resettable) NSData *publicKeyHash;

@end

/**
 * Fetches the raw value of a @c Address's @c networkType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Address_NetworkType_RawValue(Address *message);
/**
 * Sets the raw value of an @c Address's @c networkType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAddress_NetworkType_RawValue(Address *message, int32_t value);

/**
 * Fetches the raw value of a @c Address's @c accountType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Address_AccountType_RawValue(Address *message);
/**
 * Sets the raw value of an @c Address's @c accountType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAddress_AccountType_RawValue(Address *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
