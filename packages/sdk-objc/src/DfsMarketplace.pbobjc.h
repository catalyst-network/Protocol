// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DfsMarketplace.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BlockChallengeRequest;
@class PeerId;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DfsMarketplaceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DfsMarketplaceRoot : GPBRootObject
@end

#pragma mark - BlockChallengeRequest

typedef GPB_ENUM(BlockChallengeRequest_FieldNumber) {
  BlockChallengeRequest_FieldNumber_ChallengeSalt = 1,
  BlockChallengeRequest_FieldNumber_MainFileCid = 2,
  BlockChallengeRequest_FieldNumber_BlockIdxRandomGuid = 3,
};

@interface BlockChallengeRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *challengeSalt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mainFileCid;

@property(nonatomic, readwrite, copy, null_resettable) NSData *blockIdxRandomGuid;

@end

#pragma mark - BlockChallengeResponse

typedef GPB_ENUM(BlockChallengeResponse_FieldNumber) {
  BlockChallengeResponse_FieldNumber_Answer = 1,
  BlockChallengeResponse_FieldNumber_BlockChallengeRequestHash = 2,
};

@interface BlockChallengeResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *answer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *blockChallengeRequestHash;

@end

#pragma mark - BlockChallengeBroadcast

typedef GPB_ENUM(BlockChallengeBroadcast_FieldNumber) {
  BlockChallengeBroadcast_FieldNumber_OriginalChallenge = 1,
  BlockChallengeBroadcast_FieldNumber_Answer = 2,
  BlockChallengeBroadcast_FieldNumber_ChallengedPeer = 3,
  BlockChallengeBroadcast_FieldNumber_ChallengedBy = 4,
};

@interface BlockChallengeBroadcast : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BlockChallengeRequest *originalChallenge;
/** Test to see if @c originalChallenge has been set. */
@property(nonatomic, readwrite) BOOL hasOriginalChallenge;

@property(nonatomic, readwrite, copy, null_resettable) NSString *answer;

@property(nonatomic, readwrite, strong, null_resettable) PeerId *challengedPeer;
/** Test to see if @c challengedPeer has been set. */
@property(nonatomic, readwrite) BOOL hasChallengedPeer;

@property(nonatomic, readwrite, strong, null_resettable) PeerId *challengedBy;
/** Test to see if @c challengedBy has been set. */
@property(nonatomic, readwrite) BOOL hasChallengedBy;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
