/**
* Copyright (c) 2019 Catalyst Network
*
* This file is part of Catalyst.Network.Protocol.Protobuffs <https://github.com/catalyst-network/protocol-protobuffs>
*
* Catalyst.Network.Protocol.Protobuffs is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* (at your option) any later version.
* 
* Catalyst.Network.Protocol.Protobuffs is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with Catalyst.Network.Protocol.Protobuffs If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

option java_multiple_files = true;

import "Cryptography.proto";
import "Network.proto";

package Catalyst.Protocol.Account;

message Address {
	Network.NetworkType network_type = 1;
    AccountType account_type = 2;

	//multihash of the public key behind the address using Blake2b-152
	//Blake2b-152 produces 19 bytes digest
	bytes public_key_hash = 3;
}

//We need to leave the 3 first bits for the NetworkType and can use the rest
//for the AccountType
enum AccountType {
    ACCOUNT_TYPE_UNKNOWN = 0;
    PUBLIC_ACCOUNT = 8;
    CONFIDENTIAL_ACCOUNT = 16;
    SMART_CONTRACT_ACCOUNT = 24;
}
