/**
* Copyright (c) 2019 Catalyst Network
*
* This file is part of Catalyst.Network.Protocol.Protobuffs <https://github.com/catalyst-network/protocol-protobuffs>
*
* Catalyst.Network.Protocol.Protobuffs is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* (at your option) any later version.
* 
* Catalyst.Network.Protocol.Protobuffs is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with Catalyst.Network.Protocol.Protobuffs If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

option java_multiple_files = true;

package Catalyst.Protocol.Rpc.Node;

import "Peer.proto";
import "Cryptography.proto";
import "Deltas.proto";
import "Wire.proto";
import "Transaction.proto";

enum ResponseCode {
	PENDING = 0;
	SUCCESSFUL = 1;
	ERROR = 2;
	FINISHED = 3;
	EXPIRED = 4;
	FAILED = 5;
	EXISTS = 6;
}

message VersionRequest {
    bool query = 1;
}

message VersionResponse {
    string version = 1;
}

message GetInfoRequest {
    bool query = 1;
}

message GetInfoResponse {
    string query = 1;
}

message CreateWalletRequest {
    bool query = 1;
}

message CreateWalletResponse {
    string query = 1;
}

message ListWalletRequest {
    bool query = 1;
}

message ListWalletResponse {
    string query = 1;
}

message CreateAddressRequest {
    bool query = 1;
}

message CreateAddressResponse {
    string query = 1;
}

message GetAddressRequest {
    bool query = 1;
}

message GetAddressResponse {
    string query = 1;
}

message ListAddressRequest {
    bool query = 1;
}

message ListAddressResponse {
    string query = 1;
}

message ValidateAddressRequest {
    bool query = 1;
}

message ValidateAddressResponse {
    string query = 1;
}

message GetBalanceRequest {
    bool query = 1;
}

message GetBalanceResponse {
    string query = 1;
}

message CreateRawTransactionRequest {
    bool query = 1;
}

message CreateRawTransactionResponse {
    string query = 1;
}

message SignRawTransactionRequest {
    bool query = 1;
}

message SignRawTransactionResponse {
    string query = 1;
}

message DecodeRawTransactionRequest {
    bool query = 1;
}

message DecodeRawTransactionResponse {
    string query = 1;
}

message BroadcastRawTransactionRequest {
	Wire.TransactionBroadcast transaction = 1;
}

message BroadcastRawTransactionResponse {
    ResponseCode response_code = 1;
}

message SendToRequest {
    bool query = 1;
}

message SendToResponse {
    string query = 1;
}

message SendToFromRequest {
    bool query = 1;
}

message SendToFromResponse {
    string query = 1;
}

message SendManyRequest {
    bool query = 1;
}

message SendManyResponse {
    string query = 1;
}

message SendFromManyRequest {
    bool query = 1;
}

message SendFromManyResponse {
    string query = 1;
}

message AddNodeRequest {
    bool query = 1;
}

message AddNodeResponse {
    string query = 1;
}

message GetPeerListRequest { }

message GetPeerListResponse {
    repeated Peer.PeerId peers = 1;
}

message GetPeerReputationRequest {
    bytes public_key = 1;
    bytes ip = 2;
}

message GetPeerReputationResponse {
   int32 reputation = 1;
}

message SetPeerBlackListRequest {
    bytes public_key = 1;
    bytes ip = 2;
    bool blacklist = 3;
}

message SetPeerBlackListResponse{
    bytes public_key = 1;
    bytes ip = 2;
    bool blacklist = 3;
}

message GetPeerInfoRequest {
    bytes public_key = 1;
    bytes ip = 2;
}

message GetPeerInfoResponse {
    repeated Peer.PeerInfo peer_info = 1;
}

message GetConnectionCountRequest {
    bool query = 1;
}

message GetConnectionCountResponse {
    string query = 1;
}

message GetDeltaRequest {
    bytes delta_dfs_hash = 1;
}

message GetDeltaResponse {
    Deltas.Delta delta = 1;
}

message GetMempoolRequest {
    bool query = 1;
}

message GetMempoolResponse {
    repeated Transaction.PublicEntry transactions = 1;
}

message SignMessageRequest {
    bytes message = 1;
    string key_id = 2;
    Cryptography.SigningContext signing_context = 3;
}

message SignMessageResponse {
    bytes signature = 1;
    bytes public_key = 2;
    bytes original_message = 3;
}

message VerifyMessageRequest {
    bytes signature = 1;
    bytes public_key = 2;
    bytes message = 3;
    Cryptography.SigningContext signing_context = 4;
}

message VerifyMessageResponse {
    bool is_signed_by_key = 1;
}

message ServiceStatusRequest {
    bool query = 1;
}

message ServiceStatusResponse {
    string query = 1;
}

message AddFileToDfsRequest {
	uint64 file_size = 1;
	string file_name = 2;
	string node = 3;
}

message AddFileToDfsResponse {
	bytes response_code = 1;
	string dfs_hash = 2;
}

message TransferFileBytesRequest {
	uint32 chunk_id = 1;
	bytes chunk_bytes = 2;
	bytes correlation_file_name = 3;
}

message TransferFileBytesResponse {
	bytes response_code = 1;
}

message RemovePeerRequest {
	bytes peer_ip = 1;
	bytes public_key = 2;
}

message RemovePeerResponse {
	uint32 deleted_count = 1;
}

message GetPeerCountRequest { }

message GetPeerCountResponse {
	int32 peer_count = 1;  
}

message GetFileFromDfsRequest {
	string dfs_hash = 1;
}

message GetFileFromDfsResponse {
	uint64 file_size = 1;
	bytes response_code = 2;
}

message SetPeerDataFolderRequest { 
    string data_folder = 1; 
}

message SetPeerDataFolderResponse {
    bool query = 1; 
}
