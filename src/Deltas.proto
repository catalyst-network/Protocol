/**
* Copyright (c) 2019 Catalyst Network
*
* This file is part of Catalyst.Network.Protocol.Protobuffs <https://github.com/catalyst-network/protocol-protobuffs>
*
* Catalyst.Network.Protocol.Protobuffs is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* (at your option) any later version.
* 
* Catalyst.Network.Protocol.Protobuffs is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with Catalyst.Network.Protocol.Protobuffs If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

option java_multiple_files = true;

import "Transaction.proto";
import "google/protobuf/timestamp.proto";

package Catalyst.Protocol.Deltas;

message DeltaIndex {
	uint32 height = 1;
	bytes cid = 2;
}

message Delta {
	bytes previous_delta_dfs_hash = 1; //  address for the content of the previous delta on the DFS
	bytes merkle_root = 2;
	bytes merkle_poda = 3; // proof of delegated authority for active wokers
	google.protobuf.Timestamp time_stamp = 4;
	repeated Transaction.PublicEntry public_entries = 5;
	repeated Transaction.ConfidentialEntry confidential_entries = 6;
	repeated Transaction.CoinbaseEntry coinbase_entries = 7; // one per active worker
	bytes state_root = 8; // the hash of the state root
}
