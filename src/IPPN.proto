/**
* Copyright (c) 2019 Catalyst Network
*
* This file is part of Catalyst.Network.Protocol.Protobuffs <https://github.com/catalyst-network/protocol-protobuffs>
*
* Catalyst.Network.Protocol.Protobuffs is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* (at your option) any later version.
* 
* Catalyst.Network.Protocol.Protobuffs is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with Catalyst.Network.Protocol.Protobuffs If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

option java_multiple_files = true;

package Catalyst.Protocol.IPPN;

import "Peer.proto";
import "Deltas.proto";

message PeerNeighborsRequest { }

message PeerNeighborsResponse {
    repeated Peer.PeerId peers = 1; // Random subset of a nodes peer db.
}

message PingRequest { }

message PingResponse { }

message LatestDeltaHashRequest { }

message LatestDeltaHashResponse {
	Deltas.DeltaIndex result = 1; // K given del
}

message DeltaHistoryRequest {
    uint32 range = 1; // The number of deltas CIDs a node requests.
    uint32 height = 2; // The given height the node wants the range from.
}

message DeltaHistoryResponse {
    repeated Deltas.DeltaIndex result = 1; // K given del
}