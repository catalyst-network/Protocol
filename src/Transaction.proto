/**
* Copyright (c) 2019 Catalyst Network
*
* This file is part of Catalyst.Network.Protocol.Protobuffs <https://github.com/catalyst-network/protocol-protobuffs>
*
* Catalyst.Network.Protocol.Protobuffs is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* (at your option) any later version.
* 
* Catalyst.Network.Protocol.Protobuffs is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with Catalyst.Network.Protocol.Protobuffs If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto3";

option java_multiple_files = true;

import "Signature.proto";
import "Account.proto";
import "google/protobuf/timestamp.proto";

package Catalyst.Protocol.Transaction;

enum TransactionType {
	NORMAL = 0; // Public transaction type.
	CONFIDENTIAL = 1; // Private transaction type.
}

message STTransactionEntry {
    BaseTransactionEntry TXEntry = 1; // Address of sender
    uint64 Amount = 2; // 8 byte amount
    Signature.Signature Signature = 3; // 64 bytes
}

message CFTransactionEntry {
    BaseTransactionEntry TXEntry = 1; // Address of sender
    BaseTransactionEntry Address = 2; // 32 bytes, account address derived from the public key
    bytes PedersenCommit = 3; // 32 bytes
    EntryRangeProof EntryRangeProofs = 4;
    Signature.Signature Signature = 5; // 64 bytes
}

message ContractEntry {
    BaseTransactionEntry TXEntry = 1; // Address of sender
    uint64 Amount = 2; // 8 byte amount
    bytes CallData = 3; // Smart contract data.
    Signature.Signature Signature = 4; // 64 bytes
}

message BaseTransactionEntry {
    Account.Address FromAddress = 1;// Address of sender.
    Account.Address ToAddress = 2; // Address of receiver.
    google.protobuf.Timestamp TimeStamp = 3; // Timestamp transaction was created
}

/**
 * BulletProof-based range proof. See https://eprint.iacr.org/2017/1066.pdf for references to equations below.
 * Total byte size is (9+2k)*32, where k = log_2(n*m), m is number of aggregates in proof, (2^n)-1 is upper range of values.
 */
message EntryRangeProof {
    repeated bytes V = 1; // m * 32 bytes, value commitment (eq. 36) 
    bytes A = 2; // 32 bytes, bit commitment (eq. 48)
    bytes S = 3; // 32 bytes, per bit blinding factor commitment (eq. 48)
    bytes T1 = 4; // 32 bytes, poly commitment (eq. 54)
    bytes T2 = 5; // 32 bytes, poly commitment (eq. 54)
    bytes TAU = 6; // 32 bytes, proof of share (eq. 63)
    bytes MU = 7; // 32 bytes, proof of share (eq. 63)
    repeated bytes L = 8; // k * 32 bytes, aggregated vector polynomial (eq. 63)
    repeated bytes R = 9; // k * 32 bytes, aggregated vector polynomial (eq. 63)
    bytes APrime0 = 10; // 32 bytes (eq. 63)
    bytes BPrime0 = 11; // 32 bytes (eq. 63)
    bytes t = 12; 
} 

message CoinbaseEntry {
    Account.Address Address = 1; // 32 bytes, account address derived from the public key
    uint64 Amount = 2; // max 8 bytes (always positive).
}
